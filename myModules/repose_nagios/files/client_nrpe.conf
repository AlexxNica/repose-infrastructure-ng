# MANAGED BY PUPPET

#
# these commands can be run from the remote nagios server
# This is the nagios remote plugin command execution stuff
# it'll be the same on every client, so some commands may not apply to this local box
#

allowed_hosts=104.239.133.25

# we should never have many users installed, so this is super low
command[check_users]=/usr/lib/nagios/plugins/check_users -w 2 -c 5

# load!
command[check_load]=/usr/lib/nagios/plugins/check_load -w 15,10,5 -c 30,25,20

# disk space!
command[check_xvda1]=/usr/lib/nagios/plugins/check_disk -w 20% -c 10% -p /dev/xvda1

# make sure zombie stuff isn't happening
command[check_zombie_procs]=/usr/lib/nagios/plugins/check_procs -w 5 -c 10 -s Z

# make sure we're not proc bombing
command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 150 -c 200

# Making sure that the jenkins slave process is running
command[check_jenkins_slave]=/usr/lib/nagios/plugins/check_procs -c 1:1 -a 'java -jar slave.jar' -u jenkins

# make sure that there's at least one nginx, but not too many
command[check_nginx_proc]=/usr/lib/nagios/plugins/check_procs -c 1:30 -C nginx

# We want one and exactly one sonar application.jar running
command[check_sonar_proc]=/usr/lib/nagios/plugins/check_procs -c 1:1 -a 'sonar-application-4.5.jar' -u sonar

# make sure at least one, no more than 2, jenkins.war are in the process list
command[check_jenkins_master_proc]=/usr/lib/nagios/plugins/check_procs -c 1:2 -a 'jenkins.war' -u jenkins

# make sure mumble is still running
command[check_mumble_proc]=/usr/lib/nagios/plugins/check_procs -c 1:1 -C murmurd -u mumble-server